{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoginService {\n  constructor() {\n    this.harcoded_login_credentials = [{\n      name: \"abhi\",\n      password: \"stu458\"\n    }, {\n      name: \"tashfia\",\n      password: \"stu458\"\n    }];\n  }\n  saveNewUser() {}\n  authenticate(username, password) {\n    for (let i = 0; i < this.harcoded_login_credentials.length; i++) {\n      if (this.harcoded_login_credentials[i].name == username && this.harcoded_login_credentials[i].password == password) return true;\n    }\n    return false;\n  }\n  getUserList() {\n    return this.harcoded_login_credentials;\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,YAAY;EAEvBC;IAEA,+BAA0B,GAAuB,CAC/C;MAACC,IAAI,EAAC,MAAM;MAAEC,QAAQ,EAAC;IAAQ,CAAC,EAChC;MAACD,IAAI,EAAC,SAAS;MAAEC,QAAQ,EAAC;IAAQ,CAAC,CACpC;EALe;EAOhBC,WAAW,IAEX;EAEAC,YAAY,CAACC,QAAgB,EAAEH,QAAgB;IAC7C,KAAI,IAAII,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACC,0BAA0B,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAC;MACzD,IAAG,IAAI,CAACC,0BAA0B,CAACD,CAAC,CAAC,CAACL,IAAI,IAAII,QAAQ,IAAI,IAAI,CAACE,0BAA0B,CAACD,CAAC,CAAC,CAACJ,QAAQ,IAAIA,QAAQ,EAAE,OAAO,IAAI;;IAEhI,OAAO,KAAK;EACd;EAEAO,WAAW;IACT,OAAO,IAAI,CAACF,0BAA0B;EACxC;;AAtBWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["LoginService","constructor","name","password","saveNewUser","authenticate","username","i","harcoded_login_credentials","length","getUserList","factory","providedIn"],"sourceRoot":"","sources":["/home/abhijit/Bangla-Sing-Language-Learning-Assistant/bsl/src/app/login/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoginCredential } from './login.credential';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n\n  harcoded_login_credentials : LoginCredential[] = [\n    {name:\"abhi\", password:\"stu458\"},\n    {name:\"tashfia\", password:\"stu458\"}\n  ];\n\n  saveNewUser(): void{\n\n  }\n\n  authenticate(username: String, password: String): boolean {\n    for(let i=0; i<this.harcoded_login_credentials.length; i++){\n      if(this.harcoded_login_credentials[i].name == username && this.harcoded_login_credentials[i].password == password) return true;\n    }\n    return false;\n  }\n\n  getUserList(): LoginCredential[]{\n    return this.harcoded_login_credentials;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}